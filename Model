{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1wJHoKGcATeab_3fJ282bk7kfQPIXDFkB","authorship_tag":"ABX9TyMYNocAsJOrfsiTNSIq6Z5H"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"h6qIoi5ew0BN","executionInfo":{"status":"ok","timestamp":1716729187963,"user_tz":-300,"elapsed":423,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"pWkKHJz1kEG2","executionInfo":{"status":"ok","timestamp":1716729189167,"user_tz":-300,"elapsed":761,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"19abdff6-0323-4bb3-c91e-90fcc38a7ccf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["  PassengerId HomePlanet CryoSleep  Cabin  Destination   Age    VIP  \\\n","0     0001_01     Europa     False  B/0/P  TRAPPIST-1e  39.0  False   \n","1     0002_01      Earth     False  F/0/S  TRAPPIST-1e  24.0  False   \n","2     0003_01     Europa     False  A/0/S  TRAPPIST-1e  58.0   True   \n","3     0003_02     Europa     False  A/0/S  TRAPPIST-1e  33.0  False   \n","4     0004_01      Earth     False  F/1/S  TRAPPIST-1e  16.0  False   \n","\n","   RoomService  FoodCourt  ShoppingMall     Spa  VRDeck               Name  \\\n","0          0.0        0.0           0.0     0.0     0.0    Maham Ofracculy   \n","1        109.0        9.0          25.0   549.0    44.0       Juanna Vines   \n","2         43.0     3576.0           0.0  6715.0    49.0      Altark Susent   \n","3          0.0     1283.0         371.0  3329.0   193.0       Solam Susent   \n","4        303.0       70.0         151.0   565.0     2.0  Willy Santantines   \n","\n","   Transported  \n","0        False  \n","1         True  \n","2        False  \n","3        False  \n","4         True  "],"text/html":["\n","  <div id=\"df-30fc1fc0-775f-4a17-a93e-736a6785fcca\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Name</th>\n","      <th>Transported</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>B/0/P</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Maham Ofracculy</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>Juanna Vines</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>Altark Susent</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>33.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>Solam Susent</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>16.0</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>Willy Santantines</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30fc1fc0-775f-4a17-a93e-736a6785fcca')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-30fc1fc0-775f-4a17-a93e-736a6785fcca button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-30fc1fc0-775f-4a17-a93e-736a6785fcca');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8bf9ee59-a528-40d1-9b16-b0980933616e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8bf9ee59-a528-40d1-9b16-b0980933616e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8bf9ee59-a528-40d1-9b16-b0980933616e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8693,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8693,\n        \"samples\": [\n          \"0337_02\",\n          \"2891_01\",\n          \"8998_01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HomePlanet\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Europa\",\n          \"Earth\",\n          \"Mars\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CryoSleep\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6560,\n        \"samples\": [\n          \"A/29/P\",\n          \"G/1452/P\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Destination\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"TRAPPIST-1e\",\n          \"PSO J318.5-22\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.48902142390878,\n        \"min\": 0.0,\n        \"max\": 79.0,\n        \"num_unique_values\": 80,\n        \"samples\": [\n          30.0,\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VIP\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RoomService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 666.7176629280652,\n        \"min\": 0.0,\n        \"max\": 14327.0,\n        \"num_unique_values\": 1273,\n        \"samples\": [\n          2103.0,\n          1720.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FoodCourt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1611.4892403550716,\n        \"min\": 0.0,\n        \"max\": 29813.0,\n        \"num_unique_values\": 1507,\n        \"samples\": [\n          61.0,\n          783.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ShoppingMall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 604.6964584708243,\n        \"min\": 0.0,\n        \"max\": 23492.0,\n        \"num_unique_values\": 1115,\n        \"samples\": [\n          619.0,\n          356.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1136.7055348344065,\n        \"min\": 0.0,\n        \"max\": 22408.0,\n        \"num_unique_values\": 1327,\n        \"samples\": [\n          190.0,\n          622.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VRDeck\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1145.7171888056614,\n        \"min\": 0.0,\n        \"max\": 24133.0,\n        \"num_unique_values\": 1306,\n        \"samples\": [\n          977.0,\n          624.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8473,\n        \"samples\": [\n          \"Nancey Bookerson\",\n          \"Nelly Benney\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transported\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}],"source":["import pandas as pd\n","df= pd.read_csv(\"/content/train.csv\")\n","df.head()"]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"U6DVddv9khKW","executionInfo":{"status":"ok","timestamp":1716729189167,"user_tz":-300,"elapsed":36,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"973da5ed-d4ea-451b-9f06-e610bdb6165b"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Age   RoomService     FoodCourt  ShoppingMall           Spa  \\\n","count  8514.000000   8512.000000   8510.000000   8485.000000   8510.000000   \n","mean     28.827930    224.687617    458.077203    173.729169    311.138778   \n","std      14.489021    666.717663   1611.489240    604.696458   1136.705535   \n","min       0.000000      0.000000      0.000000      0.000000      0.000000   \n","25%      19.000000      0.000000      0.000000      0.000000      0.000000   \n","50%      27.000000      0.000000      0.000000      0.000000      0.000000   \n","75%      38.000000     47.000000     76.000000     27.000000     59.000000   \n","max      79.000000  14327.000000  29813.000000  23492.000000  22408.000000   \n","\n","             VRDeck  \n","count   8505.000000  \n","mean     304.854791  \n","std     1145.717189  \n","min        0.000000  \n","25%        0.000000  \n","50%        0.000000  \n","75%       46.000000  \n","max    24133.000000  "],"text/html":["\n","  <div id=\"df-597600eb-31c5-4bed-a18e-7ba08f655d09\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>8514.000000</td>\n","      <td>8512.000000</td>\n","      <td>8510.000000</td>\n","      <td>8485.000000</td>\n","      <td>8510.000000</td>\n","      <td>8505.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>28.827930</td>\n","      <td>224.687617</td>\n","      <td>458.077203</td>\n","      <td>173.729169</td>\n","      <td>311.138778</td>\n","      <td>304.854791</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>14.489021</td>\n","      <td>666.717663</td>\n","      <td>1611.489240</td>\n","      <td>604.696458</td>\n","      <td>1136.705535</td>\n","      <td>1145.717189</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>19.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>27.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>38.000000</td>\n","      <td>47.000000</td>\n","      <td>76.000000</td>\n","      <td>27.000000</td>\n","      <td>59.000000</td>\n","      <td>46.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>79.000000</td>\n","      <td>14327.000000</td>\n","      <td>29813.000000</td>\n","      <td>23492.000000</td>\n","      <td>22408.000000</td>\n","      <td>24133.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-597600eb-31c5-4bed-a18e-7ba08f655d09')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-597600eb-31c5-4bed-a18e-7ba08f655d09 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-597600eb-31c5-4bed-a18e-7ba08f655d09');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9cfe0d0b-9ecb-4625-bf05-005ea5c6309f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9cfe0d0b-9ecb-4625-bf05-005ea5c6309f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9cfe0d0b-9ecb-4625-bf05-005ea5c6309f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2999.8219236109035,\n        \"min\": 0.0,\n        \"max\": 8514.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          28.82793046746535,\n          27.0,\n          8514.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RoomService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5445.098106605418,\n        \"min\": 0.0,\n        \"max\": 14327.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8512.0,\n          224.687617481203,\n          14327.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FoodCourt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10415.198156989396,\n        \"min\": 0.0,\n        \"max\": 29813.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8510.0,\n          458.07720329024676,\n          29813.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ShoppingMall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8366.0020224504,\n        \"min\": 0.0,\n        \"max\": 23492.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8485.0,\n          173.72916912197996,\n          23492.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7968.775096084544,\n        \"min\": 0.0,\n        \"max\": 22408.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8510.0,\n          311.1387779083431,\n          22408.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VRDeck\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8539.808535720747,\n        \"min\": 0.0,\n        \"max\": 24133.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          8505.0,\n          304.8547912992357,\n          24133.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QXMl6wuBmXJq","executionInfo":{"status":"ok","timestamp":1716729189168,"user_tz":-300,"elapsed":35,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"e019e6cb-28fa-4ca4-d7ad-310cf8948cc3"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 8693 entries, 0 to 8692\n","Data columns (total 14 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   PassengerId   8693 non-null   object \n"," 1   HomePlanet    8492 non-null   object \n"," 2   CryoSleep     8476 non-null   object \n"," 3   Cabin         8494 non-null   object \n"," 4   Destination   8511 non-null   object \n"," 5   Age           8514 non-null   float64\n"," 6   VIP           8490 non-null   object \n"," 7   RoomService   8512 non-null   float64\n"," 8   FoodCourt     8510 non-null   float64\n"," 9   ShoppingMall  8485 non-null   float64\n"," 10  Spa           8510 non-null   float64\n"," 11  VRDeck        8505 non-null   float64\n"," 12  Name          8493 non-null   object \n"," 13  Transported   8693 non-null   bool   \n","dtypes: bool(1), float64(6), object(7)\n","memory usage: 891.5+ KB\n"]}]},{"cell_type":"markdown","source":["## Univariate Data Analysis"],"metadata":{"id":"hIc2xGphuAS1"}},{"cell_type":"markdown","source":["## 1) Categorical Data"],"metadata":{"id":"nHyBGk1E3P1q"}},{"cell_type":"code","source":["#sns.countplot(df[\"Transported\"])\n","df[\"Transported\"].value_counts().plot(kind=\"bar\")  ## Transported & Untransported people almost have equal frequency"],"metadata":{"id":"xZL1q7hPmbYJ","colab":{"base_uri":"https://localhost:8080/","height":487},"executionInfo":{"status":"ok","timestamp":1716729189169,"user_tz":-300,"elapsed":30,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"0f561007-e500-46c9-e590-fd95b0418273"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Transported'>"]},"metadata":{},"execution_count":8},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df[\"VIP\"].value_counts().plot(kind=\"bar\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"t9r_yDf4v9tt","executionInfo":{"status":"ok","timestamp":1716729190029,"user_tz":-300,"elapsed":884,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"6f84bbcd-b667-4818-ceed-93592f25fc03"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='VIP'>"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df[\"Destination\"].value_counts().plot(kind=\"pie\",autopct='%.2f')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"IXpPQR99yHOw","executionInfo":{"status":"ok","timestamp":1716729190030,"user_tz":-300,"elapsed":40,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"0b8d36c5-6bb6-411d-9cf1-08920487ebb3"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='count'>"]},"metadata":{},"execution_count":10},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df[\"CryoSleep\"].value_counts().plot(kind=\"bar\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"rbmUXCeSyVU7","executionInfo":{"status":"ok","timestamp":1716729190030,"user_tz":-300,"elapsed":27,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"f4d35342-c0a9-49f1-a5e7-62d667ae101d"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='CryoSleep'>"]},"metadata":{},"execution_count":11},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df[\"HomePlanet\"].value_counts().plot(kind=\"pie\",autopct='%.2f')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"WmohhVFvzFg4","executionInfo":{"status":"ok","timestamp":1716729190941,"user_tz":-300,"elapsed":933,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"1d864d8d-37f3-4404-d76d-7301516e9b05"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='count'>"]},"metadata":{},"execution_count":12},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 2) Numerical Data"],"metadata":{"id":"g0-WDpeD3bVU"}},{"cell_type":"code","source":["sns.distplot(df[\"Age\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":659},"id":"hFcuq-WP3yrW","executionInfo":{"status":"ok","timestamp":1716729190942,"user_tz":-300,"elapsed":29,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"8bade53f-b869-481e-c74f-f5dbd9174da3"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-13-cf0334540b62>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df[\"Age\"])\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Age', ylabel='Density'>"]},"metadata":{},"execution_count":13},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.boxplot(df[\"Age\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":428},"id":"H-oM6m8N5aT5","executionInfo":{"status":"ok","timestamp":1716729191720,"user_tz":-300,"elapsed":793,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"c97972d1-9737-4ebb-d75d-30580c396d00"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Age'>"]},"metadata":{},"execution_count":14},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df[\"VRDeck\"].value_counts().plot(kind=\"hist\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"DQ3YC0n_7DGL","executionInfo":{"status":"ok","timestamp":1716729191720,"user_tz":-300,"elapsed":27,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"3d2d6760-e900-4cfb-8d28-017597982069"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: ylabel='Frequency'>"]},"metadata":{},"execution_count":15},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.distplot(df[\"FoodCourt\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":657},"id":"vB7raJ2b7Jb9","executionInfo":{"status":"ok","timestamp":1716729192604,"user_tz":-300,"elapsed":902,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"5ec9159a-7ad7-44f9-fa3f-0b065208473a"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-16-311a7c14437e>:1: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df[\"FoodCourt\"])\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='FoodCourt', ylabel='Density'>"]},"metadata":{},"execution_count":16},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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nRKHDh0SCxcuFAqFQnz55ZdCCPn+3jBEydzbb78tevToITQajRg+fLj45ptv/N0kn0tMTBQRERFCo9GI7t27i8TERHHy5Enp9Rs3bog//vGPonPnziIoKEg89dRT4sKFCy7HOH36tHj88cdFYGCgCA8PF/PmzRPV1dUuNTt27BCxsbFCo9GIu+66S7z//vvt8fbctmPHDgGgwceUKVOEELXLHCxdulQYDAah1WrFmDFjxPHjx12OceXKFZGUlCQ6deokQkNDxdSpU8W1a9dcar799lsxatQoodVqRffu3cVrr73WoC0fffSRuOeee4RGoxH33nuv+Pzzz9vsfbdGc9fm+vXr4rHHHhNdu3YVAQEBomfPnmL69OkN/vGV67URQjR6bQC4/K63539Pt9u/Xy1dn6KiIvHQQw+JLl26CK1WK3r37i1eeOEFl3WihJDn9Xn++edFz549hUajEV27dhVjxoyRApQQ8v29UQghRNv0cRERERHJF+dEEREREXmAIYqIiIjIAwxRRERERB5giCIiIiLyAEMUERERkQcYooiIiIg8wBBFRERE5AGGKCIiIiIPMEQRETVj586dUCgUDR6eSkTEEEVEHcpzzz0HhULR4OPkyZPt1gYhBN555x2YTCZ06tQJYWFhGDp0KFasWIHr16+3+fmfe+45JCQktPl5iKh5DFFE1OGMHTsWFy5ccPmIjo5ut/M/++yzmDt3LsaPH48dO3agoKAAS5cuxaeffoovv/yyzc5rt9vhcDja7PhE5B6GKCLqcLRaLYxGo8uHSqXCV199heHDh0Or1SIiIgILFy5ETU2NtF9lZSX+4z/+A926dYNOp8OoUaOwb98+l2Nv27YN99xzDwIDA/HII4/g9OnTLq9/9NFHWL9+PT788EMsXrwYw4YNQ69evTB+/Hhs374djzzyCADA4XDg5Zdfxp133gmtVovY2FhkZWVJx2lsmLCgoAAKhUI6Z2ZmJsLCwvDPf/4T/fv3h1arxfPPP4+1a9fi008/lXrhdu7c6dPrS0Sto/Z3A4iIfOGnn37CE088geeeew7r1q3DsWPHMH36dOh0Orz00ksAgAULFuDvf/871q5di549e2LZsmWIj4/HyZMn0aVLF5w9exZPP/00Zs6cieTkZOzfvx/z5s1zOc/69evRp08fjB8/vkEbFAoF9Ho9AOCtt97C8uXL8Ze//AX33Xcf3nvvPTz55JM4fPgwYmJiWv2+rl+/jtdffx3vvvsu7rjjDkRERODGjRuw2Wx4//33AQBdunTx8KoRkVcEEVEHMmXKFKFSqURwcLD08etf/1osXrxY9OnTRzgcDql29erVolOnTsJut4uysjIREBAg1q9fL71eVVUlIiMjxbJly4QQQixatEj079/f5XwvvviiACCuXr0qhBCiX79+4sknn2yxnZGRkeLVV1912TZs2DDxxz/+UQghxI4dO1yOK4QQBw8eFADEqVOnhBBCvP/++wKAKCgoaHANxo8f32IbiKhtsSeKiDqcRx55BGvWrJG+Dw4OxsyZMxEXFweFQiFtf+CBB1BWVoZz586htLQU1dXVeOCBB6TXAwICMHz4cBw9ehQAcPToUZhMJpdzxcXFuXwvhGixfTabDefPn3c5l7M93377bevfKACNRoNBgwa5tQ8RtQ+GKCLqcIKDg9G7d2+/nPuee+7BsWPHvD6OUlk7JbV+KKuurm5QFxgY6BIMiej2wYnlRCQL/fr1Q25urkso2b17N0JCQnDnnXfi7rvvhkajwe7du6XXq6ursW/fPvTv3186xt69e12O+80337h8/8wzz+D777/Hp59+2qANQghYrVaEhoYiMjLS5VzO9jjP1bVrVwDAhQsXpNcLCgpa9V41Gg3sdnuraomo7TBEEZEs/PGPf8TZs2cxe/ZsHDt2DJ9++inS0tKQkpICpVKJ4OBgzJgxAy+88AKysrJw5MgRTJ8+HdevX8e0adMAAH/4wx9w4sQJvPDCCzh+/Dg2bNiAzMxMl/P89re/RWJiIpKSkvDf//3f2L9/P86cOYOtW7fCbDZjx44dAIAXXngBr7/+OjZt2oTjx49j4cKFKCgowJw5cwAAvXv3RlRUFF566SWcOHECn3/+OZYvX96q99qrVy8cOnQIx48fx+XLlxvtwSKiduDfKVlERO5pblL1zp07xbBhw4RGoxFGo1G8+OKLorq6Wnr9xo0bYvbs2SI8PFxotVrxwAMPiL1797oc47PPPhO9e/cWWq1WPPjgg+K9995rMAHcbreLNWvWiGHDhomgoCARGhoqhgwZIt566y1x/fp1qeall14S3bt3FwEBAWLw4MHiiy++cDnX119/LQYOHCh0Op148MEHxebNmxtMLNfr9Q3e58WLF8UvfvEL0alTJwFA7Nixw+3rSETeUwjRilmSREREROSCw3lEREREHmCIIiIiIvIAQxQRERGRBxiiiIiIiDzAEEVERETkAYYoIiIiIg8wRBERERF5gCGKiIiIyAMMUUREREQeYIgiIiIi8gBDFBEREZEH/n+yKUq9c3JIcAAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Bivariate Data Analysis"],"metadata":{"id":"uPnRN0Pp74Vt"}},{"cell_type":"code","source":["sns.barplot(x=\"Transported\", y=\"Age\", data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"RMI-SjYTAm0z","executionInfo":{"status":"ok","timestamp":1716729193083,"user_tz":-300,"elapsed":487,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"9293f743-fe33-478a-a858-c18996347bd9"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Transported', ylabel='Age'>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.boxplot(x=\"Transported\", y=\"Age\", data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"2l26QBFhBKc-","executionInfo":{"status":"ok","timestamp":1716729193629,"user_tz":-300,"elapsed":559,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"c9f4fa2b-c2cd-48c2-ac2a-c3ed52855ae1"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Transported', ylabel='Age'>"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.barplot(data=df, x='VIP', y='Transported')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"UmP8ouLW5_Jq","executionInfo":{"status":"ok","timestamp":1716729194162,"user_tz":-300,"elapsed":543,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"52db2c9c-53ec-44af-8c96-5f38d856db38"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='VIP', ylabel='Transported'>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.heatmap(pd.crosstab(df[\"HomePlanet\"], df[\"Transported\"]), cmap=\"Blues\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"rF-n1hWkFSWR","executionInfo":{"status":"ok","timestamp":1716729194865,"user_tz":-300,"elapsed":717,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"3a31171e-857e-4645-e4a8-a2f722f282a6"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Transported', ylabel='HomePlanet'>"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.scatterplot(x=\"RoomService\", y=\"FoodCourt\", data=df)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"5Ngi3rCVMf7-","executionInfo":{"status":"ok","timestamp":1716729195517,"user_tz":-300,"elapsed":684,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"b50e55b5-85f0-48bd-ec99-9d257ab7837c"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='RoomService', ylabel='FoodCourt'>"]},"metadata":{},"execution_count":21},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Data Preparation"],"metadata":{"id":"xx2HqcP9Qqqv"}},{"cell_type":"markdown","source":["## 1) Data Cleaning"],"metadata":{"id":"_R_hYiXVW7jn"}},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"pBr0wPGqPq7U","executionInfo":{"status":"ok","timestamp":1716729196147,"user_tz":-300,"elapsed":638,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"d8664a37-0573-4ad5-e306-76e29e9569c8"},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  PassengerId HomePlanet CryoSleep  Cabin  Destination   Age    VIP  \\\n","0     0001_01     Europa     False  B/0/P  TRAPPIST-1e  39.0  False   \n","1     0002_01      Earth     False  F/0/S  TRAPPIST-1e  24.0  False   \n","2     0003_01     Europa     False  A/0/S  TRAPPIST-1e  58.0   True   \n","3     0003_02     Europa     False  A/0/S  TRAPPIST-1e  33.0  False   \n","4     0004_01      Earth     False  F/1/S  TRAPPIST-1e  16.0  False   \n","\n","   RoomService  FoodCourt  ShoppingMall     Spa  VRDeck               Name  \\\n","0          0.0        0.0           0.0     0.0     0.0    Maham Ofracculy   \n","1        109.0        9.0          25.0   549.0    44.0       Juanna Vines   \n","2         43.0     3576.0           0.0  6715.0    49.0      Altark Susent   \n","3          0.0     1283.0         371.0  3329.0   193.0       Solam Susent   \n","4        303.0       70.0         151.0   565.0     2.0  Willy Santantines   \n","\n","   Transported  \n","0        False  \n","1         True  \n","2        False  \n","3        False  \n","4         True  "],"text/html":["\n","  <div id=\"df-24d15278-2230-4771-900a-06256c515e0d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Name</th>\n","      <th>Transported</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0001_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>B/0/P</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Maham Ofracculy</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0002_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>Juanna Vines</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0003_01</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>Altark Susent</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0003_02</td>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>33.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>Solam Susent</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0004_01</td>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>16.0</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>Willy Santantines</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-24d15278-2230-4771-900a-06256c515e0d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-24d15278-2230-4771-900a-06256c515e0d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-24d15278-2230-4771-900a-06256c515e0d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-00cb3e55-bf89-4c41-9886-c0bce3de5342\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-00cb3e55-bf89-4c41-9886-c0bce3de5342')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-00cb3e55-bf89-4c41-9886-c0bce3de5342 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8693,\n  \"fields\": [\n    {\n      \"column\": \"PassengerId\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8693,\n        \"samples\": [\n          \"0337_02\",\n          \"2891_01\",\n          \"8998_01\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HomePlanet\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Europa\",\n          \"Earth\",\n          \"Mars\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CryoSleep\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6560,\n        \"samples\": [\n          \"A/29/P\",\n          \"G/1452/P\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Destination\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"TRAPPIST-1e\",\n          \"PSO J318.5-22\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.48902142390878,\n        \"min\": 0.0,\n        \"max\": 79.0,\n        \"num_unique_values\": 80,\n        \"samples\": [\n          30.0,\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VIP\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RoomService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 666.7176629280652,\n        \"min\": 0.0,\n        \"max\": 14327.0,\n        \"num_unique_values\": 1273,\n        \"samples\": [\n          2103.0,\n          1720.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FoodCourt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1611.4892403550716,\n        \"min\": 0.0,\n        \"max\": 29813.0,\n        \"num_unique_values\": 1507,\n        \"samples\": [\n          61.0,\n          783.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ShoppingMall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 604.6964584708243,\n        \"min\": 0.0,\n        \"max\": 23492.0,\n        \"num_unique_values\": 1115,\n        \"samples\": [\n          619.0,\n          356.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1136.7055348344065,\n        \"min\": 0.0,\n        \"max\": 22408.0,\n        \"num_unique_values\": 1327,\n        \"samples\": [\n          190.0,\n          622.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VRDeck\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1145.7171888056614,\n        \"min\": 0.0,\n        \"max\": 24133.0,\n        \"num_unique_values\": 1306,\n        \"samples\": [\n          977.0,\n          624.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 8473,\n        \"samples\": [\n          \"Nancey Bookerson\",\n          \"Nelly Benney\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transported\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_xdJ8aURQ6lf","executionInfo":{"status":"ok","timestamp":1716729196148,"user_tz":-300,"elapsed":114,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"f088dc18-4ab2-4090-e1de-57a02c1e1b8d"},"execution_count":23,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId       0\n","HomePlanet      201\n","CryoSleep       217\n","Cabin           199\n","Destination     182\n","Age             179\n","VIP             203\n","RoomService     181\n","FoodCourt       183\n","ShoppingMall    208\n","Spa             183\n","VRDeck          188\n","Name            200\n","Transported       0\n","dtype: int64"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["mode_HomePlanet= df.HomePlanet.mode()\n","mode_HomePlanet[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"rfzaPtaNQ_9F","executionInfo":{"status":"ok","timestamp":1716729196149,"user_tz":-300,"elapsed":105,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"8100f312-dbc9-49df-a2c7-ae644fc16068"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Earth'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["mode_Destination= df.Destination.mode()\n","mode_Destination[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"jw-K7NdNVejD","executionInfo":{"status":"ok","timestamp":1716729196150,"user_tz":-300,"elapsed":103,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"3d855fb7-cbf9-4899-9dbb-fd5ee1b844ef"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'TRAPPIST-1e'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["mode_CryoSleep= df.CryoSleep.mode()\n","mode_CryoSleep[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mojgh_lwR9Gr","executionInfo":{"status":"ok","timestamp":1716729196150,"user_tz":-300,"elapsed":101,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"940462e2-e1c3-4f03-ee38-5e6fe9d47ff4"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["mode_Cabin= df.Cabin.mode()\n","mode_Cabin[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"E2-ImoeSTL8v","executionInfo":{"status":"ok","timestamp":1716729196151,"user_tz":-300,"elapsed":97,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"314e9417-f037-4196-a754-5b0392f7aff4"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'G/734/S'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["mode_VIP= df.VIP.mode()\n","mode_VIP[0]"],"metadata":{"id":"QZUCSevmT8F7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716729196151,"user_tz":-300,"elapsed":95,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"343e42f6-7433-486f-e0bb-38066c5c4e80"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["age_mean = df.Age.mean()\n","age_mean"],"metadata":{"id":"Tu5jUpnwUDJE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716729196152,"user_tz":-300,"elapsed":88,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"376589e9-8d1b-4dde-c438-63d74a8b95f5"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["28.82793046746535"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["RoomService_mean = df.RoomService\t.mean()\n","RoomService_mean"],"metadata":{"id":"7bFY2AWPUDAT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1716729196153,"user_tz":-300,"elapsed":83,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"c54d31bc-efe2-45ad-c80f-c04cd199fb79"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["224.687617481203"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["FoodCourt_mean = df.FoodCourt.mean()\n","FoodCourt_mean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zbh-oLFsPEGT","executionInfo":{"status":"ok","timestamp":1716729196154,"user_tz":-300,"elapsed":78,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"e26a82e4-0b17-4d21-973d-6054fad86038"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["458.07720329024676"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["ShoppingMall_mean = df.ShoppingMall.mean()\n","ShoppingMall_mean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1X1XpkhyPD5v","executionInfo":{"status":"ok","timestamp":1716729196154,"user_tz":-300,"elapsed":71,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"c1fd56d4-5898-4e49-f90a-a2c0654bb185"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["173.72916912197996"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["Spa_mean = df.Spa.mean()\n","Spa_mean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ulEyBrgfPlsg","executionInfo":{"status":"ok","timestamp":1716729196155,"user_tz":-300,"elapsed":65,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"51554e46-b00c-4817-9d0a-5d2d2182deae"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["311.1387779083431"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["VRDeck_mean = df.VRDeck.mean()\n","VRDeck_mean"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"60v6NOGCPr7F","executionInfo":{"status":"ok","timestamp":1716729196155,"user_tz":-300,"elapsed":59,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"48eb8348-ea0f-454c-df7d-5f9689b1a735"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["304.8547912992357"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["df['HomePlanet'] = df['HomePlanet'].fillna(mode_HomePlanet[0])\n","df['CryoSleep'] = df['CryoSleep'].fillna(mode_CryoSleep[0])\n","df['Cabin'] = df['Cabin'].fillna(mode_Cabin[0])\n","df['VIP'] = df['VIP'].fillna(mode_VIP[0])\n","df['Destination'] = df['Destination'].fillna(mode_Destination[0])"],"metadata":{"id":"QayWevEbTO1Y","executionInfo":{"status":"ok","timestamp":1716729196156,"user_tz":-300,"elapsed":53,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":35,"outputs":[]},{"cell_type":"code","source":["df['Age'] = df['Age'].fillna(age_mean)\n","df['RoomService'] = df['RoomService'].fillna(RoomService_mean)\n","df['FoodCourt'] = df['FoodCourt'].fillna(FoodCourt_mean)\n","df['ShoppingMall'] = df['ShoppingMall'].fillna(ShoppingMall_mean)\n","df['Spa'] = df['Spa'].fillna(Spa_mean)\n","df['VRDeck'] = df['VRDeck'].fillna(VRDeck_mean)"],"metadata":{"id":"G-ez3f5pQFTr","executionInfo":{"status":"ok","timestamp":1716729196157,"user_tz":-300,"elapsed":53,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kE_p-WsETHcq","executionInfo":{"status":"ok","timestamp":1716729196157,"user_tz":-300,"elapsed":52,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"7c2d1fdd-20ca-4560-fd62-26fa42fafe7d"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["PassengerId       0\n","HomePlanet        0\n","CryoSleep         0\n","Cabin             0\n","Destination       0\n","Age               0\n","VIP               0\n","RoomService       0\n","FoodCourt         0\n","ShoppingMall      0\n","Spa               0\n","VRDeck            0\n","Name            200\n","Transported       0\n","dtype: int64"]},"metadata":{},"execution_count":37}]},{"cell_type":"code","source":["df= df.drop([\"PassengerId\",\"Name\"], axis=1)"],"metadata":{"id":"9zPye0PfVRVd","executionInfo":{"status":"ok","timestamp":1716729196158,"user_tz":-300,"elapsed":48,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":38,"outputs":[]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zoaSzcrNXFOe","executionInfo":{"status":"ok","timestamp":1716729196953,"user_tz":-300,"elapsed":841,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"4b1bd6b2-c32e-4051-db86-6bb71997ffcc"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["17"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["df.drop_duplicates(inplace=True)"],"metadata":{"id":"Wi2FGvCFXMcp","executionInfo":{"status":"ok","timestamp":1716729196957,"user_tz":-300,"elapsed":38,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"1HLwAdrfWSqm","executionInfo":{"status":"ok","timestamp":1716729196957,"user_tz":-300,"elapsed":37,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"3ec9df57-9cdf-42c4-f464-700bc4e37d45"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  HomePlanet  CryoSleep  Cabin  Destination   Age    VIP  RoomService  \\\n","0     Europa      False  B/0/P  TRAPPIST-1e  39.0  False          0.0   \n","1      Earth      False  F/0/S  TRAPPIST-1e  24.0  False        109.0   \n","2     Europa      False  A/0/S  TRAPPIST-1e  58.0   True         43.0   \n","3     Europa      False  A/0/S  TRAPPIST-1e  33.0  False          0.0   \n","4      Earth      False  F/1/S  TRAPPIST-1e  16.0  False        303.0   \n","\n","   FoodCourt  ShoppingMall     Spa  VRDeck  Transported  \n","0        0.0           0.0     0.0     0.0        False  \n","1        9.0          25.0   549.0    44.0         True  \n","2     3576.0           0.0  6715.0    49.0        False  \n","3     1283.0         371.0  3329.0   193.0        False  \n","4       70.0         151.0   565.0     2.0         True  "],"text/html":["\n","  <div id=\"df-71aa739c-bdea-4596-921b-11203f421da9\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Transported</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>B/0/P</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>33.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>16.0</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-71aa739c-bdea-4596-921b-11203f421da9')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-71aa739c-bdea-4596-921b-11203f421da9 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-71aa739c-bdea-4596-921b-11203f421da9');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a99ac0bf-132f-40c7-8bc5-6454348db368\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a99ac0bf-132f-40c7-8bc5-6454348db368')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a99ac0bf-132f-40c7-8bc5-6454348db368 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8676,\n  \"fields\": [\n    {\n      \"column\": \"HomePlanet\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Europa\",\n          \"Earth\",\n          \"Mars\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CryoSleep\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6560,\n        \"samples\": [\n          \"F/617/S\",\n          \"G/1452/P\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Destination\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"TRAPPIST-1e\",\n          \"PSO J318.5-22\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.33363566677406,\n        \"min\": 0.0,\n        \"max\": 79.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          30.0,\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VIP\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RoomService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 660.3104217842017,\n        \"min\": 0.0,\n        \"max\": 14327.0,\n        \"num_unique_values\": 1274,\n        \"samples\": [\n          1174.0,\n          155.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FoodCourt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1595.8674028655555,\n        \"min\": 0.0,\n        \"max\": 29813.0,\n        \"num_unique_values\": 1508,\n        \"samples\": [\n          121.0,\n          2624.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ShoppingMall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 597.952966956531,\n        \"min\": 0.0,\n        \"max\": 23492.0,\n        \"num_unique_values\": 1116,\n        \"samples\": [\n          1907.0,\n          881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1125.6928940517344,\n        \"min\": 0.0,\n        \"max\": 22408.0,\n        \"num_unique_values\": 1328,\n        \"samples\": [\n          5432.0,\n          2962.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VRDeck\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1134.2884683786172,\n        \"min\": 0.0,\n        \"max\": 24133.0,\n        \"num_unique_values\": 1307,\n        \"samples\": [\n          6027.0,\n          1030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transported\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B6FgizN7WeII","executionInfo":{"status":"ok","timestamp":1716729196958,"user_tz":-300,"elapsed":37,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"8b8fb40f-854c-454a-abbf-1f5116d2b6e2"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["HomePlanet      0\n","CryoSleep       0\n","Cabin           0\n","Destination     0\n","Age             0\n","VIP             0\n","RoomService     0\n","FoodCourt       0\n","ShoppingMall    0\n","Spa             0\n","VRDeck          0\n","Transported     0\n","dtype: int64"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["df.duplicated().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XlvAqnesX47u","executionInfo":{"status":"ok","timestamp":1716729196958,"user_tz":-300,"elapsed":31,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"abfbfabb-b284-459a-addf-188cce9298de"},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":43}]},{"cell_type":"markdown","source":["## 2) Data Encoding"],"metadata":{"id":"Elz7bVPFYBUP"}},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"OZIxX5ivX--4","executionInfo":{"status":"ok","timestamp":1716729196959,"user_tz":-300,"elapsed":26,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"7dbe387d-5ac2-49c1-ce0b-da30903eae2d"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  HomePlanet  CryoSleep  Cabin  Destination   Age    VIP  RoomService  \\\n","0     Europa      False  B/0/P  TRAPPIST-1e  39.0  False          0.0   \n","1      Earth      False  F/0/S  TRAPPIST-1e  24.0  False        109.0   \n","2     Europa      False  A/0/S  TRAPPIST-1e  58.0   True         43.0   \n","3     Europa      False  A/0/S  TRAPPIST-1e  33.0  False          0.0   \n","4      Earth      False  F/1/S  TRAPPIST-1e  16.0  False        303.0   \n","\n","   FoodCourt  ShoppingMall     Spa  VRDeck  Transported  \n","0        0.0           0.0     0.0     0.0        False  \n","1        9.0          25.0   549.0    44.0         True  \n","2     3576.0           0.0  6715.0    49.0        False  \n","3     1283.0         371.0  3329.0   193.0        False  \n","4       70.0         151.0   565.0     2.0         True  "],"text/html":["\n","  <div id=\"df-a4e52715-1f43-4c9f-903f-a930297cf0c1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Transported</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>B/0/P</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>33.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>16.0</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4e52715-1f43-4c9f-903f-a930297cf0c1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a4e52715-1f43-4c9f-903f-a930297cf0c1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a4e52715-1f43-4c9f-903f-a930297cf0c1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-06fc28a0-816f-4f1d-b737-a0bc12a315a7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06fc28a0-816f-4f1d-b737-a0bc12a315a7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-06fc28a0-816f-4f1d-b737-a0bc12a315a7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8676,\n  \"fields\": [\n    {\n      \"column\": \"HomePlanet\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Europa\",\n          \"Earth\",\n          \"Mars\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CryoSleep\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6560,\n        \"samples\": [\n          \"F/617/S\",\n          \"G/1452/P\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Destination\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"TRAPPIST-1e\",\n          \"PSO J318.5-22\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.33363566677406,\n        \"min\": 0.0,\n        \"max\": 79.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          30.0,\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VIP\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RoomService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 660.3104217842017,\n        \"min\": 0.0,\n        \"max\": 14327.0,\n        \"num_unique_values\": 1274,\n        \"samples\": [\n          1174.0,\n          155.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FoodCourt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1595.8674028655555,\n        \"min\": 0.0,\n        \"max\": 29813.0,\n        \"num_unique_values\": 1508,\n        \"samples\": [\n          121.0,\n          2624.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ShoppingMall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 597.952966956531,\n        \"min\": 0.0,\n        \"max\": 23492.0,\n        \"num_unique_values\": 1116,\n        \"samples\": [\n          1907.0,\n          881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1125.6928940517344,\n        \"min\": 0.0,\n        \"max\": 22408.0,\n        \"num_unique_values\": 1328,\n        \"samples\": [\n          5432.0,\n          2962.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VRDeck\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1134.2884683786172,\n        \"min\": 0.0,\n        \"max\": 24133.0,\n        \"num_unique_values\": 1307,\n        \"samples\": [\n          6027.0,\n          1030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transported\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["from sklearn.preprocessing import OneHotEncoder\n","encoder = OneHotEncoder()\n","encoder.fit(df[[\"HomePlanet\"]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"oFlQPt3AYcVh","executionInfo":{"status":"ok","timestamp":1716729198062,"user_tz":-300,"elapsed":1126,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"680fad7e-3888-4538-d7fb-a0f1a8f81ae0"},"execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["OneHotEncoder()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>OneHotEncoder()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">OneHotEncoder</label><div class=\"sk-toggleable__content\"><pre>OneHotEncoder()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["df[\"HomePlanet\"].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zwQleStMaOBl","executionInfo":{"status":"ok","timestamp":1716729198064,"user_tz":-300,"elapsed":199,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"31d23088-658e-43ed-e765-8bb6d57ec134"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["HomePlanet\n","Earth     4798\n","Europa    2124\n","Mars      1754\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["res = encoder.transform(df[[\"HomePlanet\"]]).toarray()\n","df[[\"Earth\", \"Europa\", \"Mars\"]] = res"],"metadata":{"id":"PB83vU7haEIo","executionInfo":{"status":"ok","timestamp":1716729198071,"user_tz":-300,"elapsed":165,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":47,"outputs":[]},{"cell_type":"code","source":["df.drop(\"HomePlanet\", axis=1, inplace=True)"],"metadata":{"id":"PyO-RQOvas3x","executionInfo":{"status":"ok","timestamp":1716729198072,"user_tz":-300,"elapsed":164,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":48,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","label_encoder = LabelEncoder()"],"metadata":{"id":"0YtdRo9Ga9Vy","executionInfo":{"status":"ok","timestamp":1716729198073,"user_tz":-300,"elapsed":156,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":49,"outputs":[]},{"cell_type":"code","source":["df['CryoSleep'] = label_encoder.fit_transform(df['CryoSleep'])\n","df['Destination'] = label_encoder.fit_transform(df['Destination'])\n","df['Cabin'] = label_encoder.fit_transform(df['Cabin'])\n","df['VIP'] = label_encoder.fit_transform(df['VIP'])"],"metadata":{"id":"y6PJ55PFbJne","executionInfo":{"status":"ok","timestamp":1716729198073,"user_tz":-300,"elapsed":147,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":50,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"9ThALKd8od-a","executionInfo":{"status":"ok","timestamp":1716729198074,"user_tz":-300,"elapsed":146,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"3eccd34c-6f19-4b2c-d8b8-4e9a1f418cc2"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CryoSleep  Cabin  Destination   Age  VIP  RoomService  FoodCourt  \\\n","0          0    149            2  39.0    0          0.0        0.0   \n","1          0   2184            2  24.0    0        109.0        9.0   \n","2          0      1            2  58.0    1         43.0     3576.0   \n","3          0      1            2  33.0    0          0.0     1283.0   \n","4          0   2186            2  16.0    0        303.0       70.0   \n","\n","   ShoppingMall     Spa  VRDeck  Transported  Earth  Europa  Mars  \n","0           0.0     0.0     0.0        False    0.0     1.0   0.0  \n","1          25.0   549.0    44.0         True    1.0     0.0   0.0  \n","2           0.0  6715.0    49.0        False    0.0     1.0   0.0  \n","3         371.0  3329.0   193.0        False    0.0     1.0   0.0  \n","4         151.0   565.0     2.0         True    1.0     0.0   0.0  "],"text/html":["\n","  <div id=\"df-b3a467a7-a03d-40e6-a66d-8d963c8a39a0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Transported</th>\n","      <th>Earth</th>\n","      <th>Europa</th>\n","      <th>Mars</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>149</td>\n","      <td>2</td>\n","      <td>39.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>2184</td>\n","      <td>2</td>\n","      <td>24.0</td>\n","      <td>0</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>True</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>58.0</td>\n","      <td>1</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>33.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>2186</td>\n","      <td>2</td>\n","      <td>16.0</td>\n","      <td>0</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>True</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3a467a7-a03d-40e6-a66d-8d963c8a39a0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b3a467a7-a03d-40e6-a66d-8d963c8a39a0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b3a467a7-a03d-40e6-a66d-8d963c8a39a0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-01f80364-9618-4cfd-a4a0-4d3992770ff0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-01f80364-9618-4cfd-a4a0-4d3992770ff0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-01f80364-9618-4cfd-a4a0-4d3992770ff0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8676,\n  \"fields\": [\n    {\n      \"column\": \"CryoSleep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2002,\n        \"min\": 0,\n        \"max\": 6559,\n        \"num_unique_values\": 6560,\n        \"samples\": [\n          4011,\n          5213\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Destination\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.33363566677406,\n        \"min\": 0.0,\n        \"max\": 79.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          30.0,\n          39.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VIP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RoomService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 660.3104217842017,\n        \"min\": 0.0,\n        \"max\": 14327.0,\n        \"num_unique_values\": 1274,\n        \"samples\": [\n          1174.0,\n          155.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FoodCourt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1595.8674028655555,\n        \"min\": 0.0,\n        \"max\": 29813.0,\n        \"num_unique_values\": 1508,\n        \"samples\": [\n          121.0,\n          2624.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ShoppingMall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 597.952966956531,\n        \"min\": 0.0,\n        \"max\": 23492.0,\n        \"num_unique_values\": 1116,\n        \"samples\": [\n          1907.0,\n          881.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1125.6928940517344,\n        \"min\": 0.0,\n        \"max\": 22408.0,\n        \"num_unique_values\": 1328,\n        \"samples\": [\n          5432.0,\n          2962.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VRDeck\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1134.2884683786172,\n        \"min\": 0.0,\n        \"max\": 24133.0,\n        \"num_unique_values\": 1307,\n        \"samples\": [\n          6027.0,\n          1030.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transported\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Earth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4972096062781084,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Europa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.43000121942195213,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mars\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4016391863399154,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":51}]},{"cell_type":"markdown","source":["## 3) Data Balancing"],"metadata":{"id":"TcUyjXMipIh9"}},{"cell_type":"code","source":["x= df.drop(\"Transported\", axis=1)\n","y= df.Transported"],"metadata":{"id":"Ec1K0IDXqBsx","executionInfo":{"status":"ok","timestamp":1716729198080,"user_tz":-300,"elapsed":138,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":52,"outputs":[]},{"cell_type":"code","source":["df.Transported.value_counts().plot(kind=\"bar\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"4YvZWQ-fomvv","executionInfo":{"status":"ok","timestamp":1716729199168,"user_tz":-300,"elapsed":1223,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"f04b6a63-5196-46f2-ea70-25c3a2eb3ffe"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Transported'>"]},"metadata":{},"execution_count":53},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## 4) Data Scalaing"],"metadata":{"id":"UFmZOJDBppQs"}},{"cell_type":"code","source":["col = [\"Cabin\",\"Destination\",\"Age\",\"RoomService\",\"FoodCourt\",\"ShoppingMall\",\"Spa\",\"VRDeck\"]"],"metadata":{"id":"s-0CLhYrpd7M","executionInfo":{"status":"ok","timestamp":1716729199169,"user_tz":-300,"elapsed":40,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":54,"outputs":[]},{"cell_type":"code","source":["x[col]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_gUlguUzrSwb","executionInfo":{"status":"ok","timestamp":1716729199171,"user_tz":-300,"elapsed":41,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"82f68187-f344-4a56-fc2b-b9c7ac843b05"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Cabin  Destination   Age  RoomService  FoodCourt  ShoppingMall     Spa  \\\n","0       149            2  39.0          0.0        0.0           0.0     0.0   \n","1      2184            2  24.0        109.0        9.0          25.0   549.0   \n","2         1            2  58.0         43.0     3576.0           0.0  6715.0   \n","3         1            2  33.0          0.0     1283.0         371.0  3329.0   \n","4      2186            2  16.0        303.0       70.0         151.0   565.0   \n","...     ...          ...   ...          ...        ...           ...     ...   \n","8688    146            0  41.0          0.0     6819.0           0.0  1643.0   \n","8689   5280            1  18.0          0.0        0.0           0.0     0.0   \n","8690   5285            2  26.0          0.0        0.0        1872.0     1.0   \n","8691   2131            0  32.0          0.0     1049.0           0.0   353.0   \n","8692   2131            2  44.0        126.0     4688.0           0.0     0.0   \n","\n","      VRDeck  \n","0        0.0  \n","1       44.0  \n","2       49.0  \n","3      193.0  \n","4        2.0  \n","...      ...  \n","8688    74.0  \n","8689     0.0  \n","8690     0.0  \n","8691  3235.0  \n","8692    12.0  \n","\n","[8676 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-1b30e97f-cc32-45b2-acba-3d4b224c7bfe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>149</td>\n","      <td>2</td>\n","      <td>39.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2184</td>\n","      <td>2</td>\n","      <td>24.0</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>58.0</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>33.0</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2186</td>\n","      <td>2</td>\n","      <td>16.0</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>146</td>\n","      <td>0</td>\n","      <td>41.0</td>\n","      <td>0.0</td>\n","      <td>6819.0</td>\n","      <td>0.0</td>\n","      <td>1643.0</td>\n","      <td>74.0</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>5280</td>\n","      <td>1</td>\n","      <td>18.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>5285</td>\n","      <td>2</td>\n","      <td>26.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1872.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>2131</td>\n","      <td>0</td>\n","      <td>32.0</td>\n","      <td>0.0</td>\n","      <td>1049.0</td>\n","      <td>0.0</td>\n","      <td>353.0</td>\n","      <td>3235.0</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>2131</td>\n","      <td>2</td>\n","      <td>44.0</td>\n","      <td>126.0</td>\n","      <td>4688.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>12.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8676 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b30e97f-cc32-45b2-acba-3d4b224c7bfe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b30e97f-cc32-45b2-acba-3d4b224c7bfe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b30e97f-cc32-45b2-acba-3d4b224c7bfe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c5fe8aa0-e72a-4550-861f-48925dd21ff6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c5fe8aa0-e72a-4550-861f-48925dd21ff6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c5fe8aa0-e72a-4550-861f-48925dd21ff6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"x[col]\",\n  \"rows\": 8676,\n  \"fields\": [\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2002,\n        \"min\": 0,\n        \"max\": 6559,\n        \"num_unique_values\": 6560,\n        \"samples\": [\n          4011,\n          5213,\n          1897\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Destination\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2,\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.33363566677406,\n        \"min\": 0.0,\n        \"max\": 79.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          30.0,\n          39.0,\n          21.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RoomService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 660.3104217842017,\n        \"min\": 0.0,\n        \"max\": 14327.0,\n        \"num_unique_values\": 1274,\n        \"samples\": [\n          1174.0,\n          155.0,\n          521.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FoodCourt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1595.8674028655555,\n        \"min\": 0.0,\n        \"max\": 29813.0,\n        \"num_unique_values\": 1508,\n        \"samples\": [\n          121.0,\n          2624.0,\n          26.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ShoppingMall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 597.952966956531,\n        \"min\": 0.0,\n        \"max\": 23492.0,\n        \"num_unique_values\": 1116,\n        \"samples\": [\n          1907.0,\n          881.0,\n          4333.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1125.6928940517344,\n        \"min\": 0.0,\n        \"max\": 22408.0,\n        \"num_unique_values\": 1328,\n        \"samples\": [\n          5432.0,\n          2962.0,\n          591.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VRDeck\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1134.2884683786172,\n        \"min\": 0.0,\n        \"max\": 24133.0,\n        \"num_unique_values\": 1307,\n        \"samples\": [\n          6027.0,\n          1030.0,\n          5353.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["from sklearn.preprocessing import MinMaxScaler\n","model= MinMaxScaler(feature_range=(1,5))\n","model.fit(x[col])\n","x[col] = model.transform(x[col])\n","df[col] = x[col]"],"metadata":{"id":"aIcjK8f5rWJl","executionInfo":{"status":"ok","timestamp":1716729199171,"user_tz":-300,"elapsed":38,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":56,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ibef42Uyrm8X","executionInfo":{"status":"ok","timestamp":1716729199172,"user_tz":-300,"elapsed":38,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"f6a14e78-5ab2-4cff-c2f5-f52ee3ba84d4"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CryoSleep     Cabin  Destination       Age  VIP  RoomService  FoodCourt  \\\n","0          0  1.090868          5.0  2.974684    0     1.000000   1.000000   \n","1          0  2.331910          5.0  2.215190    0     1.030432   1.001208   \n","2          0  1.000610          5.0  3.936709    1     1.012005   1.479791   \n","3          0  1.000610          5.0  2.670886    0     1.000000   1.172140   \n","4          0  2.333130          5.0  1.810127    0     1.084596   1.009392   \n","\n","   ShoppingMall       Spa    VRDeck  Transported  Earth  Europa  Mars  \n","0      1.000000  1.000000  1.000000        False    0.0     1.0   0.0  \n","1      1.004257  1.098001  1.007293         True    1.0     0.0   0.0  \n","2      1.000000  2.198679  1.008122        False    0.0     1.0   0.0  \n","3      1.063170  1.594252  1.031989        False    0.0     1.0   0.0  \n","4      1.025711  1.100857  1.000331         True    1.0     0.0   0.0  "],"text/html":["\n","  <div id=\"df-2a4afa80-c769-4563-bb2a-2866f91dc728\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Transported</th>\n","      <th>Earth</th>\n","      <th>Europa</th>\n","      <th>Mars</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1.090868</td>\n","      <td>5.0</td>\n","      <td>2.974684</td>\n","      <td>0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>2.331910</td>\n","      <td>5.0</td>\n","      <td>2.215190</td>\n","      <td>0</td>\n","      <td>1.030432</td>\n","      <td>1.001208</td>\n","      <td>1.004257</td>\n","      <td>1.098001</td>\n","      <td>1.007293</td>\n","      <td>True</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1.000610</td>\n","      <td>5.0</td>\n","      <td>3.936709</td>\n","      <td>1</td>\n","      <td>1.012005</td>\n","      <td>1.479791</td>\n","      <td>1.000000</td>\n","      <td>2.198679</td>\n","      <td>1.008122</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1.000610</td>\n","      <td>5.0</td>\n","      <td>2.670886</td>\n","      <td>0</td>\n","      <td>1.000000</td>\n","      <td>1.172140</td>\n","      <td>1.063170</td>\n","      <td>1.594252</td>\n","      <td>1.031989</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>2.333130</td>\n","      <td>5.0</td>\n","      <td>1.810127</td>\n","      <td>0</td>\n","      <td>1.084596</td>\n","      <td>1.009392</td>\n","      <td>1.025711</td>\n","      <td>1.100857</td>\n","      <td>1.000331</td>\n","      <td>True</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2a4afa80-c769-4563-bb2a-2866f91dc728')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2a4afa80-c769-4563-bb2a-2866f91dc728 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2a4afa80-c769-4563-bb2a-2866f91dc728');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-46ba195d-efd9-4079-85d9-f12b71df43ed\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-46ba195d-efd9-4079-85d9-f12b71df43ed')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-46ba195d-efd9-4079-85d9-f12b71df43ed button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8676,\n  \"fields\": [\n    {\n      \"column\": \"CryoSleep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2214540931624238,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 6560,\n        \"samples\": [\n          3.4461045891141944,\n          4.179143162067389\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Destination\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6292366429228415,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          5.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7257537046467878,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          2.518987341772152,\n          2.9746835443037973\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VIP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RoomService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1843541346504367,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1274,\n        \"samples\": [\n          1.3277727367906749,\n          1.0432749354365882\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FoodCourt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21411698290887268,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1508,\n        \"samples\": [\n          1.0162345285613659,\n          1.3520611813638346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ShoppingMall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10181388846527004,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1116,\n        \"samples\": [\n          1.324706282989954,\n          1.150008513536523\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20094482221558985,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1328,\n        \"samples\": [\n          1.9696536951088897,\n          1.5287397358086396\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VRDeck\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.18800621031427786,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1307,\n        \"samples\": [\n          1.9989640740894212,\n          1.1707205900633986\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Transported\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Earth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4972096062781084,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Europa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.43000121942195213,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mars\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4016391863399154,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":57}]},{"cell_type":"markdown","source":["## 5) Train & Test"],"metadata":{"id":"sR-iWEaps-hb"}},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","x_train, x_test, y_train, y_test = train_test_split(x, y)"],"metadata":{"id":"LxMiUkTGrqS3","executionInfo":{"status":"ok","timestamp":1716729199173,"user_tz":-300,"elapsed":36,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":58,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"fCHObuexCLBV","executionInfo":{"status":"ok","timestamp":1716729267723,"user_tz":-300,"elapsed":609,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"47f1e57f-4b0f-4ca8-a97a-ee8a389cd748"},"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CryoSleep     Cabin  Destination       Age  VIP  RoomService  FoodCourt  \\\n","0             0  1.090868          5.0  2.974684    0     1.000000   1.000000   \n","1             0  2.331910          5.0  2.215190    0     1.030432   1.001208   \n","2             0  1.000610          5.0  3.936709    1     1.012005   1.479791   \n","3             0  1.000610          5.0  2.670886    0     1.000000   1.172140   \n","4             0  2.333130          5.0  1.810127    0     1.084596   1.009392   \n","...         ...       ...          ...       ...  ...          ...        ...   \n","8688          0  1.089038          1.0  3.075949    1     1.000000   1.914903   \n","8689          1  4.220003          3.0  1.911392    0     1.000000   1.000000   \n","8690          0  4.223052          5.0  2.316456    0     1.000000   1.000000   \n","8691          0  2.299588          1.0  2.620253    0     1.000000   1.140744   \n","8692          0  2.299588          5.0  3.227848    0     1.035178   1.628987   \n","\n","      ShoppingMall       Spa    VRDeck  Earth  Europa  Mars  \n","0         1.000000  1.000000  1.000000    0.0     1.0   0.0  \n","1         1.004257  1.098001  1.007293    1.0     0.0   0.0  \n","2         1.000000  2.198679  1.008122    0.0     1.0   0.0  \n","3         1.063170  1.594252  1.031989    0.0     1.0   0.0  \n","4         1.025711  1.100857  1.000331    1.0     0.0   0.0  \n","...            ...       ...       ...    ...     ...   ...  \n","8688      1.000000  1.293288  1.012265    0.0     1.0   0.0  \n","8689      1.000000  1.000000  1.000000    1.0     0.0   0.0  \n","8690      1.318747  1.000179  1.000000    1.0     0.0   0.0  \n","8691      1.000000  1.063013  1.536195    0.0     1.0   0.0  \n","8692      1.000000  1.000000  1.001989    0.0     1.0   0.0  \n","\n","[8676 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-abe818e2-0fde-4241-bcfb-f3b2eaae3a35\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Earth</th>\n","      <th>Europa</th>\n","      <th>Mars</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1.090868</td>\n","      <td>5.0</td>\n","      <td>2.974684</td>\n","      <td>0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>2.331910</td>\n","      <td>5.0</td>\n","      <td>2.215190</td>\n","      <td>0</td>\n","      <td>1.030432</td>\n","      <td>1.001208</td>\n","      <td>1.004257</td>\n","      <td>1.098001</td>\n","      <td>1.007293</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1.000610</td>\n","      <td>5.0</td>\n","      <td>3.936709</td>\n","      <td>1</td>\n","      <td>1.012005</td>\n","      <td>1.479791</td>\n","      <td>1.000000</td>\n","      <td>2.198679</td>\n","      <td>1.008122</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1.000610</td>\n","      <td>5.0</td>\n","      <td>2.670886</td>\n","      <td>0</td>\n","      <td>1.000000</td>\n","      <td>1.172140</td>\n","      <td>1.063170</td>\n","      <td>1.594252</td>\n","      <td>1.031989</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>2.333130</td>\n","      <td>5.0</td>\n","      <td>1.810127</td>\n","      <td>0</td>\n","      <td>1.084596</td>\n","      <td>1.009392</td>\n","      <td>1.025711</td>\n","      <td>1.100857</td>\n","      <td>1.000331</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>8688</th>\n","      <td>0</td>\n","      <td>1.089038</td>\n","      <td>1.0</td>\n","      <td>3.075949</td>\n","      <td>1</td>\n","      <td>1.000000</td>\n","      <td>1.914903</td>\n","      <td>1.000000</td>\n","      <td>1.293288</td>\n","      <td>1.012265</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8689</th>\n","      <td>1</td>\n","      <td>4.220003</td>\n","      <td>3.0</td>\n","      <td>1.911392</td>\n","      <td>0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8690</th>\n","      <td>0</td>\n","      <td>4.223052</td>\n","      <td>5.0</td>\n","      <td>2.316456</td>\n","      <td>0</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.318747</td>\n","      <td>1.000179</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8691</th>\n","      <td>0</td>\n","      <td>2.299588</td>\n","      <td>1.0</td>\n","      <td>2.620253</td>\n","      <td>0</td>\n","      <td>1.000000</td>\n","      <td>1.140744</td>\n","      <td>1.000000</td>\n","      <td>1.063013</td>\n","      <td>1.536195</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>8692</th>\n","      <td>0</td>\n","      <td>2.299588</td>\n","      <td>5.0</td>\n","      <td>3.227848</td>\n","      <td>0</td>\n","      <td>1.035178</td>\n","      <td>1.628987</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.001989</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8676 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abe818e2-0fde-4241-bcfb-f3b2eaae3a35')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-abe818e2-0fde-4241-bcfb-f3b2eaae3a35 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-abe818e2-0fde-4241-bcfb-f3b2eaae3a35');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-db837442-9d0c-4662-a392-b68c5146791b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db837442-9d0c-4662-a392-b68c5146791b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-db837442-9d0c-4662-a392-b68c5146791b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a75bd982-cc01-49df-b671-3e99c778ffce\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a75bd982-cc01-49df-b671-3e99c778ffce button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x","summary":"{\n  \"name\": \"x\",\n  \"rows\": 8676,\n  \"fields\": [\n    {\n      \"column\": \"CryoSleep\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Cabin\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2214540931624238,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 6560,\n        \"samples\": [\n          3.4461045891141944,\n          4.179143162067389\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Destination\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.6292366429228415,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          5.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Age\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7257537046467878,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 81,\n        \"samples\": [\n          2.518987341772152,\n          2.9746835443037973\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VIP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"RoomService\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1843541346504367,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1274,\n        \"samples\": [\n          1.3277727367906749,\n          1.0432749354365882\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FoodCourt\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.21411698290887268,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1508,\n        \"samples\": [\n          1.0162345285613659,\n          1.3520611813638346\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ShoppingMall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10181388846527004,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1116,\n        \"samples\": [\n          1.324706282989954,\n          1.150008513536523\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.20094482221558985,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1328,\n        \"samples\": [\n          1.9696536951088897,\n          1.5287397358086396\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VRDeck\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.18800621031427786,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1307,\n        \"samples\": [\n          1.9989640740894212,\n          1.1707205900633986\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Earth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4972096062781084,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Europa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.43000121942195213,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Mars\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4016391863399154,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","source":["## Modeling & Evalution"],"metadata":{"id":"gLuY6bT5tE6H"}},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","from sklearn.metrics import confusion_matrix\n","from sklearn.metrics import accuracy_score"],"metadata":{"id":"G_XCj16tsIWc","executionInfo":{"status":"ok","timestamp":1716729199174,"user_tz":-300,"elapsed":36,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":59,"outputs":[]},{"cell_type":"code","source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.svm import SVC\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.neural_network import MLPClassifier\n"],"metadata":{"id":"Rd36V1Qit2fM","executionInfo":{"status":"ok","timestamp":1716729199816,"user_tz":-300,"elapsed":677,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["models = [\n","    LogisticRegression(),\n","    SVC(),\n","    KNeighborsClassifier(),\n","    DecisionTreeClassifier(),\n","    RandomForestClassifier(),\n","    MultinomialNB(),\n","    MLPClassifier()\n","]"],"metadata":{"id":"P6Utz0WSszDF","executionInfo":{"status":"ok","timestamp":1716729199817,"user_tz":-300,"elapsed":24,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score"],"metadata":{"id":"PDaldZ5SuMNH","executionInfo":{"status":"ok","timestamp":1716729199818,"user_tz":-300,"elapsed":22,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":62,"outputs":[]},{"cell_type":"code","source":["for mdl in models:\n","    mdl.fit(x_train, y_train)\n","    y_pred = mdl.predict(x_test)\n","\n","    train_score = mdl.score(x_train, y_train)\n","    test_score = mdl.score(x_test, y_test)\n","\n","    acc = accuracy_score(y_test, y_pred)\n","    pre = precision_score(y_test, y_pred)\n","    rec = recall_score(y_test, y_pred)\n","    f1 = f1_score(y_test, y_pred)\n","\n","    name = type(mdl).__name__\n","    print(name)\n","    print(train_score)\n","    print(test_score)\n","    print(acc)\n","    print(pre)\n","    print(rec)\n","    print(f1)\n","    print(classification_report(y_test, y_pred))\n","    print(confusion_matrix(y_test, y_pred))\n","\n","    print(\"++++++++++++++++++++++++++++++++++++++++++++++++\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q6G8ngpftjma","executionInfo":{"status":"ok","timestamp":1716729226364,"user_tz":-300,"elapsed":26567,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}},"outputId":"3c120c0c-39c1-464b-e7ab-eee5c861208e"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"stream","name":"stdout","text":["LogisticRegression\n","0.7797756262486553\n","0.789303826648225\n","0.789303826648225\n","0.8024809160305344\n","0.770852428964253\n","0.7863487611033194\n","              precision    recall  f1-score   support\n","\n","       False       0.78      0.81      0.79      1078\n","        True       0.80      0.77      0.79      1091\n","\n","    accuracy                           0.79      2169\n","   macro avg       0.79      0.79      0.79      2169\n","weighted avg       0.79      0.79      0.79      2169\n","\n","[[871 207]\n"," [250 841]]\n","++++++++++++++++++++++++++++++++++++++++++++++++\n","SVC\n","0.7593360995850622\n","0.7671738128169664\n","0.7671738128169664\n","0.82847533632287\n","0.6773602199816682\n","0.7453353504790721\n","              precision    recall  f1-score   support\n","\n","       False       0.72      0.86      0.79      1078\n","        True       0.83      0.68      0.75      1091\n","\n","    accuracy                           0.77      2169\n","   macro avg       0.78      0.77      0.77      2169\n","weighted avg       0.78      0.77      0.77      2169\n","\n","[[925 153]\n"," [352 739]]\n","++++++++++++++++++++++++++++++++++++++++++++++++\n","KNeighborsClassifier\n","0.8324880897495005\n","0.760258183494698\n","0.760258183494698\n","0.7769156159068865\n","0.7341888175985335\n","0.7549481621112157\n","              precision    recall  f1-score   support\n","\n","       False       0.75      0.79      0.77      1078\n","        True       0.78      0.73      0.75      1091\n","\n","    accuracy                           0.76      2169\n","   macro avg       0.76      0.76      0.76      2169\n","weighted avg       0.76      0.76      0.76      2169\n","\n","[[848 230]\n"," [290 801]]\n","++++++++++++++++++++++++++++++++++++++++++++++++\n","DecisionTreeClassifier\n","0.999692638696788\n","0.747810050714615\n","0.747810050714615\n","0.7566037735849057\n","0.7351054078826764\n","0.7456996745699676\n","              precision    recall  f1-score   support\n","\n","       False       0.74      0.76      0.75      1078\n","        True       0.76      0.74      0.75      1091\n","\n","    accuracy                           0.75      2169\n","   macro avg       0.75      0.75      0.75      2169\n","weighted avg       0.75      0.75      0.75      2169\n","\n","[[820 258]\n"," [289 802]]\n","++++++++++++++++++++++++++++++++++++++++++++++++\n","RandomForestClassifier\n","0.999692638696788\n","0.7957584140156754\n","0.7957584140156754\n","0.813953488372093\n","0.76993583868011\n","0.7913330193122938\n","              precision    recall  f1-score   support\n","\n","       False       0.78      0.82      0.80      1078\n","        True       0.81      0.77      0.79      1091\n","\n","    accuracy                           0.80      2169\n","   macro avg       0.80      0.80      0.80      2169\n","weighted avg       0.80      0.80      0.80      2169\n","\n","[[886 192]\n"," [251 840]]\n","++++++++++++++++++++++++++++++++++++++++++++++++\n","MultinomialNB\n","0.6935607806977102\n","0.7035500230520978\n","0.7035500230520978\n","0.7145593869731801\n","0.6837763519706691\n","0.6988290398126464\n","              precision    recall  f1-score   support\n","\n","       False       0.69      0.72      0.71      1078\n","        True       0.71      0.68      0.70      1091\n","\n","    accuracy                           0.70      2169\n","   macro avg       0.70      0.70      0.70      2169\n","weighted avg       0.70      0.70      0.70      2169\n","\n","[[780 298]\n"," [345 746]]\n","++++++++++++++++++++++++++++++++++++++++++++++++\n","MLPClassifier\n","0.7853081297064699\n","0.7943752881512217\n","0.7943752881512217\n","0.8121974830590513\n","0.769019248395967\n","0.7900188323917138\n","              precision    recall  f1-score   support\n","\n","       False       0.78      0.82      0.80      1078\n","        True       0.81      0.77      0.79      1091\n","\n","    accuracy                           0.79      2169\n","   macro avg       0.80      0.79      0.79      2169\n","weighted avg       0.80      0.79      0.79      2169\n","\n","[[884 194]\n"," [252 839]]\n","++++++++++++++++++++++++++++++++++++++++++++++++\n"]}]},{"cell_type":"code","source":["model = RandomForestClassifier()\n","model.fit(x_train, y_train)\n","\n","\n","import pickle\n","\n","with open(\"model.pkl\", \"wb\") as f:\n","  pickle.dump(model, f)"],"metadata":{"id":"BGhfZJHiBX64","executionInfo":{"status":"ok","timestamp":1716729530797,"user_tz":-300,"elapsed":1906,"user":{"displayName":"Faizan Afzal","userId":"10825641045799025657"}}},"execution_count":72,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"kDYMatISDWGO"},"execution_count":null,"outputs":[]}]}